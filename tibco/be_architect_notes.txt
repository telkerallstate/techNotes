Most conventional event processing software is used either for Business Process
Management (BPM), TIBCO ActiveMatrix® BPM for example, or for Service
Oriented Architecture (SOA), for example TIBCO ActiveMatrix® BusinessWorks
software



The TIBCO BusinessEvents engine can be described not only as a CEP engine but
also as an event-driven rule engine or real-time rule engine


model-driven approach
developer defines the event, rule, concept (class) and state
models which are then compiled so that at run-time incoming events are
processed as efficiently as possible.
The various models are as follows:
Event model
Concept model
Rule model
Rule functions
State model
Query model


The rule memory is never “reset” (unless by design), so
that future events can always be compared to past events. For this reason, the rule
engine is described as a stateful rule engine.


TIBCO BusinessEvents is a declarative, distributed event processing platform
covering multiple event processing use cases. Different use cases are supported
using optional add-on products, available separately.

The core product provides essential features such as channels, events and
concepts, rules and rule functions, distributed cache, monitoring and
management, tester, and so on



pg - 6 figure



A BAM project might only need TIBCO BusinessEvents® Views dashboards,???


How you manage objects generated by the rules executing in the inference engine
depends on whether you want to keep them for later use. You can manage objects
in memory only, or using a distributed cache, or using a cache with a backing
store.The recommended way to manage objects for most production needs is to use a
cache and a backing store


Deploy-time Configuration Settings are in the Cluster Deployment Descriptor (CDD)



TIBCO BusinessEvents Monitoring and Management (MM)
The MM component enables you to deploy cache-based or in-memory TIBCO
BusinessEvents engines, and then monitor and manage a deployed cluster


the things that the project works with such as employees,
inventory, parts, and so on are concepts in the ontology of the project, as are
scorecards, which hold metrics


Events can be created from messages arriving through
channels. Events can also be generated internally, for use in the engine and to
send out messages to external systems.



Rules are triggered by events and by changes in concepts and scorecards


Designing the ontology and the rules well is key to a good CEP (complex event
processing) project


Channels (except for local channels which communicate between agents),
represent connections to a resource, such as a Rendezvous daemon, JMS server,
HTTP server or client, Hawk domain, or a space in TIBCO ActiveSpaces


Messages arriving through channels are transformed into simple events.
Conversely, simple events sent out of TIBCO BusinessEvents are transformed to
the appropriate type of message



A score card serves as a static variable that is available throughout the project. You
can use a ScoreCard resource to track key performance indicators or any other
information.


Rules define what constitutes unusual, suspicious, problematic, or advantageous
activity within your enterprise applications


TIBCO BusinessEvents offers the following types of functions for use in rules:
• Standard — These functions are provided with TIBCO BusinessEvents.
• Ontology — TIBCO BusinessEvents generates these functions based on the
resources in your project.
• Custom — You can write custom functions using Java and integrate them into
TIBCO BusinessEvents for use in rules.
• Rule Function — In addition to Java-based custom functions, you can use rule
function resources to write functions using the TIBCO BusinessEvents rule
language.




Note that the TIBCO BusinessEvents Express edition supports only In Memory
object management



You can use any of these deployment methods
At the command-line. You specify the CDD file
Using TIBCO Administrator
Using TIBCO BusinessEvents Monitoring and Management. This is the
preferred method



You can also use TIBCO Administrator features for monitoring and management.
However they are not specialized for TIBCO BusinessEvents, whereas the MM
component is specifically designed for use with TIBCO BusinessEvents



Hot Deployment


In addition to simple events, which work with incoming and outgoing messages
of various sorts, TIBCO BusinessEvents uses a special-purpose event type called
SOAPEvent, which inherits from SimpleEvent.


Event preprocessors are rule functions with one argument of type simple event.


Every JMS destination that is configured to be an input destination runs in its own
JMS Session. This provides good throughput on queues and topics for processing,
and less connections


For each message type (that is, each type of channel), TIBCO BusinessEvents
acknowledges the receipt of messages according to the protocol of the messaging
system.
reliable Rendezvous messages do not require acknowledgement.
JMS messages might require acknowledgement, depending on the message
acknowledgement mode


Events have a time to live (TTL) setting. Events cannot be modified after they are
initially asserted, but they can continue to trigger rules during their time to live


Rules at runtime can create instances of concepts.Rules can also modify existing concept instance property values


Concepts must be explicitly deleted from working memory when no longer
needed or they will steadily increase memory usage. Use the function
Instance.deleteInstance() to delete concept instances.



At runtime, a rule on a parent concept also affects all its child concepts. For
example, suppose the concept Coupe inherits from the concept Car. A rule on Car
is therefore also a rule on Coupe.


A rule function is a function written in the TIBCO BusinessEvents rule language

Events
can be filtered (ignored), preprocessed into concepts or cached concepts, or
asserted into the rule engine's working memory



internal runtime
memory structure known as a Rete network (because it uses a derivative of the Rete
algorithm).


A run to completion, or RTC cycle-when an external action causes
changes to the Rete network


Run to completion cycle-One RTC is composed of one or more conflict resolution cycles. A conflict resolution
cycle begins when TIBCO BusinessEvents builds (or refreshes) a rule action agenda,
a list of all rules that are eligible to fire.


TIBCO BusinessEvents evaluates
the following kinds of rule conditions in the order shown, to perform the
evaluation efficiently.
Filters - Customer.type == "gold";
Equivalent join conditions - Customer.accountMgr == AccountManager.id;
Non-equivalent join conditions - Customer.numOrders < AccountManager.threshold;




Object Management Types



The In Memory option is a good choice for development and testing
environments. In production environments, the In Memory option is best used for
stateless operations and transient objects. An independently deployed In Memory
application can act as an event router, directing events to agents in a cache cluster
for processing.



Two kinds of load balancing configuration are available: basic load balancing and
content-aware load balancing. They support messages arriving from TIBCO
Enterprise Message Service queue sources



Agent X receives an event E, fires a rule R1 that creates a concept C1

